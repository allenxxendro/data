#SINGLY LINKED LIST

class Node:
    def __init__(self,data):
        self.data = data
        self.ref = None

class LinkedList:
    def __init__(self):
        self.head = None
    #PREPEND    
    def prepend(self,data):
        new_node=Node(data)
        new_node.ref=self.head
        self.head=new_node
        print("new node added",new_node)
    #TRAVERSING
    def traverse(self):
        if self.head is None:
            print("Linked list is empty!")
        else:
            n = self.head
            while n is not None:
                print(n.data,"---->\n",end=" ")
                n = n.ref
    #APPEND           
    def append(self,data):
        new_node=Node(data)
        if self.head is None:
            new_node=self.head
        else:
            n=self.head
            while n.ref is not None:
                n=n.ref
            n.ref=new_node
    #DELETE        
    def delete(self):
        if self.head is None:
            print("Liked List is Empty")
        else:
            self.head=self.head.ref
#DRIVER CODE:-
LL1 = LinkedList()
LL1.prepend(10)
LL1.prepend(20)
LL1.prepend(30)
LL1.traverse()
LL1.append(100)
LL1.append(200)
LL1.traverse()
LL1.delete()
LL1.delete()
LL1.traverse()